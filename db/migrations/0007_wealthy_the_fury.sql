CREATE TABLE "document_chunks" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "document_chunks_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"document_id" bigint NOT NULL,
	"chunk" text NOT NULL,
	"embedding" vector(3072) NOT NULL,
	"created_at" timestamp with time zone DEFAULT timezone('utc'::text, now()),
	"updated_at" timestamp with time zone DEFAULT timezone('utc'::text, now()),
	"active" boolean DEFAULT true,
	"is_knowledge_base" boolean DEFAULT false
);
--> statement-breakpoint
ALTER TABLE "document_chunks" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
ALTER TABLE "documents" DISABLE ROW LEVEL SECURITY;--> statement-breakpoint
DROP POLICY "Users can read their own active documents" ON "documents" CASCADE;--> statement-breakpoint
DROP POLICY "Users can delete their own documents" ON "documents" CASCADE;--> statement-breakpoint
DROP POLICY "Users can insert their own documents" ON "documents" CASCADE;--> statement-breakpoint
DROP POLICY "Users can update their own documents" ON "documents" CASCADE;--> statement-breakpoint
DROP POLICY "Users can view their own documents" ON "documents" CASCADE;--> statement-breakpoint
CREATE POLICY "Users can read their own active documents" ON "document_chunks" AS PERMISSIVE FOR SELECT TO public USING (((auth.uid() = user_id) AND (active = true)));--> statement-breakpoint
CREATE POLICY "Users can delete their own documents" ON "document_chunks" AS PERMISSIVE FOR ALL TO public;--> statement-breakpoint
CREATE POLICY "Users can insert their own documents" ON "document_chunks" AS PERMISSIVE FOR ALL TO public;--> statement-breakpoint
CREATE POLICY "Users can update their own documents" ON "document_chunks" AS PERMISSIVE FOR ALL TO public;--> statement-breakpoint
CREATE POLICY "Users can view their own documents" ON "document_chunks" AS PERMISSIVE FOR ALL TO public;